{"title":"Jupyter e Visualizações (Basics)","markdown":{"headingText":"Jupyter e Visualizações (Basics)","containsRefs":false,"markdown":"\n::: {.callout-tip}\n## Conteúdos\n\nUtilização de jupyter notebooks para documentação de scripts e visualização de resultados.\n\nIntrodução ao `Pyplot` do *package* `Matplotlib`.\n:::\n\n## Jupyter e Markdown\n\nUm **JUPYTER** Notebook é composto de uma combinação de células de código e documentação.\n\nAbrir através do prompt: `Anaconda prompt -> jupyter notebook`\n\nFicheiros do tipo `.ipynb`\n\n![](images/notebook.png)\n\nShortcuts\n![](images/shortcuts.png)\n\nThe Zen of Python, by Tim Peters\n\n***\n\n<img src=\"https://cdn-blog.adafruit.com/uploads/2020/06/20200602zen.jpg\"/>\n\n```{python}\nimport this\n```\n\n### Data Exploration and Visualization (Basics)\n\n#### Importar Dados Externos para Pandas Dataframe\n\n[Exemplo .csv](https://dados.gov.pt/pt/datasets/despesa-com-medicamentos-nos-hospitais-do-sns-1/)\n[Exemplo .xlsx](https://data.europa.eu/data/datasets/classificacao-etaria-de-teatro?locale=pt)\n\n```{python}\n# Obter dados a partir do Link Direto ao dados\n# Importar Bibliotecas\n# No ambiente formação devem-se utilizar os ficheiros locais (poderá dar erro \"http error 404\")\n\nimport pandas as pd\nimport requests \n# Link direto para ficheiro CSV: Despesa com Medicamentos nos Hospitais do SNS\nficheiro = r'https://dados.gov.pt/pt/datasets/r/8803343f-6e1b-47de-87ac-26432adb45f0'\n\n# Importar num Pandas Dataframe\ndf = pd.read_csv(ficheiro, sep=';')\n\n# Informação\n# print(df.head(5))\n# print(df.info())\n# print(df.describe())\n```\n```{python}\n#| eval: false \n\n# Import Packages openxyl para poder trabalhar com XLSX\nimport pandas as pd\nimport openpyxl\nimport numpy as np\n\n# Link Direto para ficheiro XLSX\nficheiro = r'https://dados.gov.pt/s/resources/classificacao-etaria-de-teatro/20240331-230417/classificacaoetariateatro.xlsx'\n# Importar num DataFrame\n# Argumentos uteis: skiprows=[0,1], usecols='A', nrows=2, header=None, sheet_name='Sheet1'\n\n# Mostrar primeiras 3 linhas e ultimas 3 linhas (head e tail em conjunto)\n# Utilizar iloc e numpy\n# print (df.iloc[np.r_[0:3, -3:0]])  # head e tail\n# print(df.info())\n# print(df.describe())\n```\n\n#### Importar tabela da BD\n```{python}\n#| eval: false \n\n# Obter Password e Utilizador para Ligacao SQL\nfrom getpass import getpass # para ler a password sem a mostrar\nmy_user = '\"BRUNO.LIMA\"[BDIFRM]' \nmy_password = '*******'\n```\n\n```{python}\n#| eval: false \n\n# Ler Dados da BD\n# criar conexão\nimport cx_Oracle \nimport pandas as pd\nhost = 'c21oradev01.int.ine.pt'\nport = '1521'\nservice = 'FORMACAO'\ndsn_tns = cx_Oracle.makedsn(host, port, service_name=service) \n\n# Criar a conexão com todos os elementos,\n# incluingo user e password\nconn = cx_Oracle.connect(user=my_user, password=my_password, dsn=dsn_tns) \n\n# Cursor:\n# Criar o cursor na conexão conn que criámos antes\nc = conn.cursor()\n```\n\nLer Diferentes Views para Pandas DF\n```{python}\n#| eval: false \n\n# Dados por Municipio:\n# SQL String\nmy_sql = \"\"\"\nselect *\nfrom V_BGRI2021_DTMN_PT \n\"\"\"\n# Executar o cursor c com a string como parâmetro\nc.execute(my_sql)\n\n# Ober Nomes Colunas: (c.description devolva listagem dos atributos, nome atributo é 1º elemento - x[0])\n# No Modulo Intermédio devem discutir mais este tipo de metodo para criar Listagem\nnames = [x[0] for x in c.description]\n#print(names)\n\n# Input tabela dentro DataFrame, atribuir nomes colunas\ndf_mn_c2021 = pd.DataFrame(c.fetchall(), columns = names)\n\n# Dados por NUTS3:\n\n# SQL String\nmy_sql = \"\"\"\nselect *\nfrom V_BGRI2021_N3_PT \n\"\"\"\n\n# Executar o cursor c com a string como parâmetro\nc.execute(my_sql)\n# Criar Nomes colunas\nnames = [ x[0] for x in c.description]\ndf_n3_c2021 = pd.DataFrame(c.fetchall(), columns = names)\n```\n\nler a partir de .xlsx\n```{python}\n#| eval: true \n\n# Solução de recurso caso existem problemas da BD \nimport pandas as pd\ndf_n3_c2021 = pd.read_excel(r'data\\N3_C2021.xlsx')\ndf_mn_c2021 = pd.read_excel(r'data\\DTMN_C2021.xlsx')\n# Mostrar informação inicial:\n# print(df_n3_c2021.head(5))\n# print(df_mn_c2021.head(5))\n```\n\n```{python}\n# Criar DF a partir de Ficheiros EXCEL\n# \"C:\\Users\\bart.schoen\\OneDrive - ineportugal\\Documents\\2024_FormacaoPython\\Dados\\DTMN_C2021.xlsx\"\n# \"C:\\Users\\bart.schoen\\OneDrive - ineportugal\\Documents\\2024_FormacaoPython\\Dados\\N3_C2021.xlsx\"\n# Import Packages openxyl para poder trabalhar com XLSX\nimport pandas as pd\nimport numpy as np\n\n# Link Direto para ficheiro XLSX\nficheiro_dtmn = r'data\\DTMN_C2021.xlsx'\nficheiro_n3 = r'data\\N3_C2021.xlsx'\n# Importar num DataFrame\ndf_n3_c2021 = pd.read_excel(ficheiro_n3)\nficheiro_dtmn = pd.read_excel(ficheiro_dtmn) \n# Argumentos uteis: skiprows=[0,1], usecols='A', nrows=2, header=None\n\n# Mostrar primeiras 3 linhas e ultimas 3 linhas (head e tail em conjunto)\n# Utilizar iloc e numpy\n# print(df_n3_c2021.head(5))\n# print(df_mn_c2021.head(5))\n# print(df_mn_c2021.info())\n```\n\n#### importar dados da DGS\n\nImportar DGS (Certificados de Obitos por Dia)\n```{python}\n# Ver referencia: https://dados.gov.pt/pt/datasets/registos-de-certificados-de-obito/\n# Atributos: Ano, Mês, Dia do Mês, Dia da Semana, Nº Certificados de Óbito Diários\n\nimport pandas as pd\n\n# Link DGS (Certificados de Obitos por Dia)  \nficheiro = r'http://dados.gov.pt/pt/datasets/r/dde8a843-d6a8-4a3f-82ff-b0e9c6743a3a'\n# Ler ficheiro do computador:\n#ficheiro = r'data\\evolucao-diaria-de-certificados-de-obito.csv'\n\n# Importar em DataFrame\ndf_obitos = pd.read_csv(ficheiro, sep=';')\n\n# Mostrar informação df\n# print(df_obitos.head(5))\n# print(df_obitos.info())\n# print(df_obitos.describe())\n```\n\n## Gráficos em MATPLOTLIB e SEABORN\n\nobter dados\n```{python}\n# Solução de recurso caso existem problemas da BD \nimport pandas as pd\n\ndf_n3_c2021 = pd.read_excel(r'data\\N3_C2021.xlsx')\ndf_mn_c2021 = pd.read_excel(r'data\\DTMN_C2021.xlsx')\n# Mostrar informação inicial:\n# print(df_n3_c2021.head(5))\n# print(df_mn_c2021.head(5))\n\n```\n```{python}\n# Criar DF a partir de Ficheiros EXCEL\n# \"C:\\Users\\bart.schoen\\OneDrive - ineportugal\\Documents\\2024_FormacaoPython\\Dados\\DTMN_C2021.xlsx\"\n# \"C:\\Users\\bart.schoen\\OneDrive - ineportugal\\Documents\\2024_FormacaoPython\\Dados\\N3_C2021.xlsx\"\n# Import Packages openxyl para poder trabalhar com XLSX\nimport pandas as pd\nimport numpy as np\n\n# Link Direto para ficheiro XLSX\nficheiro_dtmn = r'data\\DTMN_C2021.xlsx'\nficheiro_n3 = r'data\\N3_C2021.xlsx'\n# Importar num DataFrame\ndf_n3_c2021 = pd.read_excel(ficheiro_n3)\nficheiro_dtmn = pd.read_excel(ficheiro_dtmn) \n# Argumentos uteis: skiprows=[0,1], usecols='A', nrows=2, header=None\n\n# Mostrar primeiras 3 linhas e ultimas 3 linhas (head e tail em conjunto)\n# Utilizar iloc e numpy\n# print(df_n3_c2021.head(5))\n# print(df_mn_c2021.head(5))\n# print(df_mn_c2021.info())\n```\n\n```{python}\n# Importar DGS (Certificados de Obitos por Dia)\n# Ver referencia: https://dados.gov.pt/pt/datasets/registos-de-certificados-de-obito/\n# Atributos: Ano, Mês, Dia do Mês, Dia da Semana, Nº Certificados de Óbito Diários\n\nimport pandas as pd\n\n# Link DGS (Certificados de Obitos por Dia)  \n#ficheiro = r'http://dados.gov.pt/pt/datasets/r/dde8a843-d6a8-4a3f-82ff-b0e9c6743a3a'\n# Ler ficheiro do computador:\nficheiro = r'data\\evolucao-diaria-de-certificados-de-obito.csv'\n\n# Importar em DataFrame\ndf_obitos = pd.read_csv(ficheiro, sep=';')\n\n# Mostrar informação df\n# print(df_obitos.head(5))\n# print(df_obitos.info())\n# print(df_obitos.describe())\n```\n\n\n![](images/plo_anatomy.png)\n\n### Gráfico de Dispersão (Scatterplot) em MATPLOTLIB\n\n```{python}\n# Importar pyplot do matplotlib \nfrom matplotlib import pyplot as plt\n```\n\n```{python}\n# Scatterplot que conssiste de 2 plots\n# 1º plot: Mostrar nº de indivíduos no áxis X, Y áxis: nº de indivíduos com idade superior a 65 \n# 2º plot: Mostrar nº de indivíduos no áxis X, Y áxis: nº de indivíduos com idade inferior a 14  \n\n\n# Marker: circle ('o'), point ('.'), diamond('d'), or square ('s')\n# s - tamamnho\n# label - rótulo a colocar\n# alpha - transparência\n# Plot 1\nplt.scatter(df_mn_c2021.N_INDIVIDUOS, df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS,\n                color = 'Red', \n                marker='.', \n                s=12,\n                label = '65 ou mais', \n                alpha = 0.5)\n# Plot 2\nplt.scatter(df_mn_c2021.N_INDIVIDUOS, df_mn_c2021.N_INDIVIDUOS_0_14,\n                color = 'Green', \n                marker='s', \n                s=12,\n                label = '15 ou menos', \n                alpha = 0.5) \n# Definir Labels x e y áxis\nplt.xlabel('Nº Individuos')\nplt.ylabel('Nº Individuos por grupo')\n\n# Adicionar GRID\nplt.grid(True)\n\n# Definir Título\nplt.title('Relação Individuos por grupo idade ao total \\n por municipio',size=12,fontweight=\"bold\")\n\n# Mostrar Legenda\nplt.legend()\nplt.show()\n```\n### Gráfico Relação Grupos Etários com Tamanho Municipio (valores relativos)\n```{python}\n# É possivel dividir as variáveis!\n# Permita tirar conclusões dos dados\nplt.scatter(df_mn_c2021.N_INDIVIDUOS/1000, df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS,\n               color = 'Red', s=12, marker='.', label = '65 ou mais', alpha = 0.5)\n# 2º plot com \nplt.scatter(df_mn_c2021.N_INDIVIDUOS/1000, df_mn_c2021.N_INDIVIDUOS_0_14/df_mn_c2021.N_INDIVIDUOS,\n               color = 'Green', s=12, marker='s', label = '15 ou menos', alpha = 0.5) # \n#'''\n# Labels x e y áxis\nplt.xlabel('Nº Individuos (por 1000)')\nplt.ylabel('Rácio nº Individuos')\n# Adicionar GRID\nplt.grid(True)\nplt.title('Relação Individuos por grupo idade ao total \\n por municipio',size=12,fontweight=\"bold\")\n# Mostrar Legenda\nplt.legend()\nplt.style.use('fivethirtyeight')\n#plt.title\nplt.show()\n```\nCriar a mesma Figura utilizando os objectos *fig* e *ax*\n```{python}\n# Import matplotlib\nfrom matplotlib import pyplot as plt\nfig,ax = plt.subplots()\n\n# Scatterplot que conssite de 2 plots\n# 1º plot: Mostrar nº de indivíduos no áxis X, Y áxis: nº de indivíduos com idade superior a 65 \n# 2º plot: Mostrar nº de indivíduos no áxis X, Y áxis: nº de indivíduos com idade inferior a 14  \n\nax.scatter(df_mn_c2021.N_INDIVIDUOS/1000, df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS,\n            color = 'Red', \n           s=12, \n           marker='.', \n           label = '65 ou mais', \n           alpha = 0.5)\n# 2º plot com \nax.scatter(df_mn_c2021.N_INDIVIDUOS/1000, df_mn_c2021.N_INDIVIDUOS_0_14/df_mn_c2021.N_INDIVIDUOS,\n               color = 'Green', \n               s=12, \n               marker='s', \n               label = '15 ou menos', \n               alpha = 0.5) # \n\n\n\n# Definir Labels x e y áxis\nax.set_xlabel('Nº Individuos')\nax.set_ylabel('Nº Individuos por grupo')\n\n# Adicionar GRID\nax.grid(True)\n\n# Definir Título\nax.set_title('Relação Individuos por grupo idade ao total \\n por municipio',size=12,fontweight=\"bold\")\n\n\n# Mostrar Legenda\nplt.legend()\nplt.show()\n```\n\n### ScatterPlot em SEABORN\n```{python}\n# Grafico Scatterplot SEABORN - Inicial\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\n# Criar Gráfico\nsns.scatterplot(x=df_mn_c2021.N_INDIVIDUOS, \n                y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS, \n                data = df_mn_c2021\n               )\nplt.show()\n```\n\nSeaborn adicionar tamanho\n```{python}\n# Grafico Scatterplot SEABORN - Incluir cor\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nsns.set_palette('Accent')\n\n# Criar Gráfico\n# size - variavel para tamanho de cada ponto\nsns.scatterplot(x=df_mn_c2021.N_INDIVIDUOS/1000, \n                y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS, \n                data = df_mn_c2021,\n                hue = \"NUTS2\",\n                hue_order = ['11','15','16','17','18','20','30'],\n                # Relação entre edificios até 1980 no total de edificios\n                size = (df_mn_c2021.N_EDIFICIOS_CONSTR_ANTES_1945 + \n                        df_mn_c2021.N_EDIFICIOS_CONSTR_1946_1980) /\n                    df_mn_c2021.N_EDIFICIOS_CLASSICOS\n               )\nplt.show()\n```\n\n### plotnine\n\n```{python}\n#| eval: true\n\nfrom plotnine import ggplot, geom_point, aes, stat_smooth, facet_wrap\n\n(\n    ggplot(df_mn_c2021, aes(x=df_mn_c2021.N_INDIVIDUOS, \n    y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS))\n    + geom_point()\n    + stat_smooth(method=\"lm\")\n)\n```\n\n### SEABORN RELPLOT\n\nSEABORN REPLOT Inicial\n```{python}\nsns.set_palette('Accent')\n\n# Criar Gráfico\nsns.relplot(x=df_mn_c2021.N_INDIVIDUOS/1000, \n                y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS, \n                data = df_mn_c2021,\n                kind = \"scatter\",\n                col = \"NUTS2\",\n                col_order = ['11','15','16','17','18','20','30'],\n                # Numero colunas\n                col_wrap = 3,\n                size = (df_mn_c2021.N_EDIFICIOS_CONSTR_ANTES_1945 + \n                        df_mn_c2021.N_EDIFICIOS_CONSTR_1946_1980) /\n                    df_mn_c2021.N_EDIFICIOS_CLASSICOS,\n                # Tamanho minimo e máximo\n                sizes=(10, 150),\n                alpha = 0.7\n               )\nplt.show()\n```\n```{python}\n# Outro Exemplo com Municipios com menos de 50000 e mais que 50000\nsns.set_style('whitegrid')\n\n# Criar Nova Coluna para indicar tamanho do municipio (2 classes)\ndf_mn_c2021[\"Tipo Municipio\"] = np.where(df_mn_c2021.N_INDIVIDUOS<50000, 'Menos 50.000', 'Mais 50.000')\n\n# Mostra população com mais de 65 anos por tipo de municipio\nsns.relplot(x=df_mn_c2021.N_INDIVIDUOS/1000, \n                y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS,\n                data = df_mn_c2021,\n           kind=\"scatter\",\n           col=df_mn_c2021[\"Tipo Municipio\"]           \n           )\nplt.show()\n```\nMesmo Figura Utilizando MATPLOTLIB\n```{python}\n# Create subplots\nfig, axes = plt.subplots(nrows=2, ncols=4, figsize=(16, 8))\n\n# Mudar o array de 2 dimensõe para listagem, facilitando a definição do subplot\naxes = axes.flatten()  \n\n# Define NUTS2 order\nnut2_order = ['11', '15', '16', '17', '18', '20', '30']\n\n\n# Percorrer cada NUTS2 e criar um SUBPLOT\nfor i, nut2 in enumerate(nut2_order[:7]):\n    \n    # Definir ax para subplot (0...n)\n    ax = axes[i]\n    # Seleção dos dados NUTS2\n    df_nut2 = df_mn_c2021[df_mn_c2021['NUTS2'] == nut2]\n    # Criar SUBPLOT\n    ax.scatter(\n        df_nut2['N_INDIVIDUOS'] / 1000,\n        df_nut2['N_INDIVIDUOS_65_OU_MAIS'] / df_nut2['N_INDIVIDUOS'],\n        s=(df_nut2['N_EDIFICIOS_CONSTR_ANTES_1945'] +\n           df_nut2['N_EDIFICIOS_CONSTR_1946_1980']) / df_nut2['N_EDIFICIOS_CLASSICOS'] * 1000,  \n        alpha=0.7,\n        label=nut2\n    )\n    ax.set_xlabel('N_INDIVIDUOS (thousands)')\n    ax.set_ylabel('N_INDIVIDUOS_65_OU_MAIS / N_INDIVIDUOS')\n    ax.set_title(f'NUTS2: {nut2}')\n    ax.legend()\n\nplt.tight_layout(pad=1.5)\nplt.show()\n\n```\n### SeaBorn CATPLOTs\nGráfico de contagens (CountPlot)\n```{python}\n# Criar COUNTPLOT - Contagens de registos por ano\nsns.set_palette('Accent')\n\n# Ordenar no Notebook de demonstração\ncategory_order = sorted(df_obitos['Ano'].unique(),reverse=True)\n\n# Criar Gráfico\nsns.catplot(x=\"Ano\", # x ou y\n            data = df_obitos,\n            kind = \"count\",\n            order = category_order\n            )\nplt.show()\n\n```\nGráfico de barras (Bar plot)\n\n```{python}\n# Criar Barplot - Contagens de nº de óbitos diarios por ano\n\nsns.set_palette('Accent')\n\n# Gráfico com nº de óbitos diários por ano\nsns.catplot(x=\"Ano\",\n            y = 'Nº Certificados de Óbito Diários',\n            data = df_obitos,\n            kind = \"bar\",\n            # Error bar mostra Interval de confiança (ci) \n            errorbar = 'ci' # None\\'ci\\sd\\se\\pi\\metodo definido'\n            )\nplt.show()\n```\nBox plot\n```{python}\n# Criar BOXPLOT - Distribuição dos ceritficados Óbito Diários\n\nsns.set_palette('tab10')\n# Mudar o aspecto do output\n#sns.set_context('notebook')\n\n# Gráfico mostra a distribuição de nº de óbitos diários\nsns.catplot(x=\"Dia da Semana\", # Dia da Semana\n            y = 'Nº Certificados de Óbito Diários',\n            data = df_obitos,\n            kind = \"box\",\n            whis = [5,95] # 2.0\n            # sym = '' # - controlar visualização outliers\n            )\nplt.show()\n```\n\n### Criar plots com ou sem RELPLOT\\CATPLOT\n\n```{python}\n# Mostrar Percentagem pop65 no total\n\nsns.set_palette('Accent')\n\n# Nova Coluna com Ano e Mes\n# Criar Nova Coluna para indicar tamanho do municipio\n# Converter para String e Juntar\ndf_obitos[\"ANO_MES\"] = df_obitos['Ano'].astype(str) + df_obitos['Mês'].astype(str)\n\n# Criar Gráfico nº de óbitos por ano e mes\ng1 = sns.relplot(x='ANO_MES',\n                y= 'Nº Certificados de Óbito Diários', \n                data = df_obitos,\n                kind = 'line',\n                color = 'green',\n                errorbar = 'ci' # Mudar de ci para sd\n                )\n\nplt.show()\n\n# Grafico com Lineplot com seleção dos anos 2015 até 2016\n\ndf_obitos2015_2016 = df_obitos[df_obitos['Ano'].isin([2015, 2016, 2017])]\ng2 = sns.lineplot(x='ANO_MES',\n                  y= 'Nº Certificados de Óbito Diários', \n                  data = df_obitos2015_2016,\n                  color = 'red',\n                  errorbar = 'sd' # Mudar de ci para sd\n                  )\n\n# Get the x-axis tick positions and labels\nxtick_positions = g2.get_xticks()\nxtick_labels = df_obitos2015_2016['ANO_MES'].iloc[xtick_positions].tolist()\n\n# Set x-axis tick labels to show only every 12th label\nfiltered_xtick_labels = [label if i % 12 == 0 else '' for i, label in enumerate(xtick_labels)]\ng2.set_xticks(xtick_positions)\ng2.set_xticklabels(filtered_xtick_labels, rotation=45)  # You can adjust rotation as needed\n    \ng1    \nplt.show()\n```\n\n### Histograma (Histogram)\n```{python}\n# histograma que mostra a distribuição do rácio de população com mais de 65 anos\n\nsns.set_palette('Accent')\n\n# Alternativa Order List\nhue_order_list = sorted(df_mn_c2021['NUTS2'].unique())\n\n# Criar Gráfico com sns.histplot\nsns.histplot(x=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS, \n            data = df_mn_c2021,\n             bins = 30,\n             #binwidth = 0.02, - Alternativa definir tamanho de cada bin\n            hue = \"NUTS2\",\n            hue_order = ['11','15','16','17','18','20','30']\n               )\nplt.show()\n```\n\n### Customização dos gráficos em SEABORN\n\n```{python}\n# Exemplo diferenças na visualização com estes 3 paramentros\n\n# Categorical Color Brewer palettes: 'tab10' (default matplotlib palette), 'Dark2', 'Pastel1', 'Set2', 'Paired'\n# Seaborn has six variations of matplotlib’s palette, called: deep, muted, pastel, bright, dark, and colorblind\nsns.set_palette('colorblind')\n# 'paper',  'notebook', 'talk', 'poster'\nsns.set_context('paper')\n# Atenção - estilo continua valido para o resto do codigo\n# darkgrid, whitegrid, dark, white, ticks\nsns.set_style('darkgrid')\n# Mudar o aspecto do output\n\n\n# Gráfico mostra a distribuição de nº de óbitos diários\nsns.catplot(x=\"Dia da Semana\", # Dia da Semana\n            y = 'Nº Certificados de Óbito Diários',\n            data = df_obitos,\n            kind = \"box\",\n            whis = [5,95]# 2.0\n            #sym = '' # - controlar mostrar outliers\n            )\nplt.show()\n```\n\n```{python}\n# Demonstração diferentes STYLES\n\n# darkgrid, whitegrid, dark, white, ticks\nfor estilo in ['darkgrid', 'whitegrid', 'dark', 'white', 'ticks']:\n    sns.set_style(estilo)\n    sns.set_palette('Accent')\n\n    # Criar Gráfico\n    sns.relplot(x=df_mn_c2021.N_INDIVIDUOS/1000, \n                    y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS, \n                    data = df_mn_c2021,\n                    kind = \"scatter\",\n                    hue = 'NUTS2')\n    print(estilo.upper())\n    plt.show()\n\n#plt.show()\n```\n\ntipos de plots em Seaborn\n```{python}\n# Diferentes tipos de plots em Seaborn\n# \ng1 = sns.scatterplot(x=df_mn_c2021.N_INDIVIDUOS,y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS, data = df_mn_c2021)\ng2 = sns.relplot(x=df_mn_c2021.N_INDIVIDUOS,y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS, data = df_mn_c2021,kind='scatter')\nprint(type(g1))\nprint(type(g2))\n\n```\n\nAdicionar Titulos\n```{python}\n# Definições globais:\nsns.set_style('ticks')\nsns.set_palette('colorblind')\nsns.set_context('notebook')\n\n# # Criar Gráfico\ng = sns.relplot(x=df_mn_c2021.N_INDIVIDUOS/1000, \n                y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS, \n                data = df_mn_c2021,\n                kind = \"scatter\",\n                hue = 'NUTS2',\n               col='NUTS1')\n\n# Definir Titulo e font do titulo\ng.fig.suptitle('Relacao população 65+ no total de população',\n               y = 1.05,\n              fontdict={'size': 20, 'color': 'black','name': 'Arial'})\n\ng.set_titles(\"NUTS1 {col_name}\")\n\nplt.show()\n```\n\nMudar Rotulos dos Eixos\n```{python}\ng = sns.relplot(x=df_mn_c2021.N_INDIVIDUOS/1000, \n                y=df_mn_c2021.N_INDIVIDUOS_65_OU_MAIS/df_mn_c2021.N_INDIVIDUOS, \n                data = df_mn_c2021,\n                kind = \"scatter\",\n                hue = 'NUTS2',\n               col='NUTS1')\n\ng.fig.suptitle('Relacao população 65+ no total de população',\n               y = 1.05,\n              fontdict={'color': 'black','name': 'Arial'})\n\ng.set_titles(\"NUTS1 {col_name}\")\n\n# Rotulos Eixos\n# .set - permite definir atributos para cada eixo de um FacetGrid\ng.set(xlabel=\"População por municipio (em 1000)\",\n     ylabel=\"Rácio nº Individuos superior a 65 anos\")\n\nplt.show()\n\n'''\n# Gravar Ficheiro:\noutputfile = r'c:\\temp\\omeuplot.png'\ng.savefig(outputfile, format='png')\n\n'''\n```\n\n## Exercícios\n\nLer dados\n```{python}\n\nimport pandas as pd\nimport requests \n# Link direto para ficheiro CSV: Despesa com Medicamentos nos Hospitais do SNS\nficheiro = r'data\\utentes-atendidos-nos-centros-de-saude-no-ambito-da-soep.csv'\n\n# Importar num Pandas Dataframe\ndf = pd.read_csv(ficheiro, sep=';')\n\ndf.head\ndf.info\ndf.describe\n\n```\n\nBOXPLOT com a distribuíção por ARS dos diferentes nº de utentes por Sexo\n```{python}\n\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nsns.set_theme(style=\"ticks\", palette=\"pastel\")\n\n# Gráfico mostra a distribuição de nº de óbitos diários\nsns.catplot(x=\"ARS\", # Dia da Semana\n            y = 'Nº Utentes',\n            data = df,\n            kind = \"box\",\n            hue = \"Sexo\",\n            whis = [5,95] # 2.0\n            # sym = '' # - controlar visualização outliers\n            )\nplt.show()\n```\n\nMostrar num LINEPLOT o nº de utentos por Ano por ARS\n\n```{python}\n#| warning: false\n\n# Criar novo variável ano no Dataframe:\n# Converter \"Período\" para formato datetime\ndf['Período'] = pd.to_datetime(df['Período'], format='%Y-%m')\n\n# Extrair o ano e criar nova coluna ANO\ndf['ANO'] = df['Período'].dt.year\n\ncol_order= sorted(df['ARS'].unique(),reverse=False)\n\nsns.relplot(x=df.ANO, \n                y=df['Nº Utentes'], \n                data = df,\n                kind = \"line\",\n                col = \"ARS\",\n                color='red',\n                col_wrap = 3, \n                errorbar = 'ci') \nplt.show()\n```\n\nDesafio utilizar o package CUTECHARTS para  nº de observações por ARS\n\n```{python}\nimport pandas as pd\nimport cutecharts.charts as ctc\n\ndf2 = df['ARS'].value_counts().to_frame(name=\"count\")\n\n# pie chart \npie = ctc.Pie('ARS', # title\n              width='720px',height='720px')\n\n# set the chart options\npie.set_options(labels=list(df2.index), # ARS names as labels\n                inner_radius=0)\n\n# label to be shown on graph\npie.add_series(list(df2['count'])) \n\n# display the charts\npie.render_notebook()\n\n```\n\n\n<br>\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["epub.css"],"output-file":"300-mod3.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","bibliography":["references.bib"],"theme":{"light":"flatly","dark":"solar"}},"extensions":{"book":{"multiFile":true}}},"epub":{"identifier":{"display-name":"ePub","target-format":"epub","base-format":"epub"},"execute":{"fig-width":5,"fig-height":4,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"epub","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":false,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"default-image-extension":"png","html-math-method":"mathml","to":"epub","toc":true,"css":["epub.css"],"output-file":"300-mod3.epub"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente"},"metadata":{"bibliography":["references.bib"],"lang":"pt","date":"2024-03-31"},"extensions":{"book":{"selfContainedOutput":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":true,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":"H","fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","include-in-header":{"text":"\\usepackage{fvextra}\n\\DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\n\\areaset[0.50in]{4.5in}{8in}\n"},"include-before-body":{"text":"\\RecustomVerbatimEnvironment{verbatim}{Verbatim}{\n   showspaces = false,\n   showtabs = false,\n   breaksymbolleft={},\n   breaklines\n   % Note: setting commandchars=\\\\\\{\\} here will cause an error \n}  \n"},"output-file":"300-mod3.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"block-headings":true,"bibliography":["references.bib"],"documentclass":"scrbook","classoption":["paper=6in:9in","pagesize=pdftex","headinclude=on","footinclude=on","12pt"]},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","epub","pdf"]}